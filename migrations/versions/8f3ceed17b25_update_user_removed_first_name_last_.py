"""update user removed first_name, last_name, role

Revision ID: 8f3ceed17b25
Revises: 
Create Date: 2025-09-13 13:25:04.022266

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8f3ceed17b25'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_authors_id'), table_name='authors')
    op.create_index(op.f('ix_authors_id'), 'authors', ['id'], unique=False)
    op.drop_constraint(op.f('book_authors_book_id_fkey'), 'book_authors', type_='foreignkey')
    op.drop_constraint(op.f('book_authors_author_id_fkey'), 'book_authors', type_='foreignkey')
    op.create_foreign_key(None, 'book_authors', 'authors', ['author_id'], ['id'])
    op.create_foreign_key(None, 'book_authors', 'books', ['book_id'], ['id'])
    op.alter_column('books', 'genre',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('Fiction', 'Non_Fiction', 'Science', 'History', name='genre'),
               existing_nullable=False,
               postgresql_using='genre::genre')
    op.drop_index(op.f('idx_books_id'), table_name='books')
    op.create_index(op.f('ix_books_id'), 'books', ['id'], unique=False)
    op.drop_column('users', 'role')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'phone_number')
    op.drop_column('users', 'last_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_books_id'), table_name='books')
    op.create_index(op.f('idx_books_id'), 'books', ['id'], unique=False)
    op.alter_column('books', 'genre',
               existing_type=sa.Enum('Fiction', 'Non_Fiction', 'Science', 'History', name='genre'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_constraint(None, 'book_authors', type_='foreignkey')
    op.drop_constraint(None, 'book_authors', type_='foreignkey')
    op.create_foreign_key(op.f('book_authors_author_id_fkey'), 'book_authors', 'authors', ['author_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('book_authors_book_id_fkey'), 'book_authors', 'books', ['book_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_authors_id'), table_name='authors')
    op.create_index(op.f('idx_authors_id'), 'authors', ['id'], unique=False)
    # ### end Alembic commands ###
